import collections
import sys
input = sys.stdin.readline
sys.setrecursionlimit(10**6)
N,M=map(int,input().split())
graph=collections.defaultdict(list)
ans=[]
for _ in range(M):
	a,b=map(int,input().split())
	graph[a-1].append(b-1)
d=[-1]*N
stack=[]
on_stack=[False]*N
id=0
for i in graph.values():
	i.sort()
def dfs(now):
	global id
	id+=1
	d[now]=id
	stack.append(now)
	on_stack[now]=True
	
	parent=d[now]
	for nxt in graph[now]:
		if d[nxt]==-1: 
			parent = min(parent,dfs(nxt))
		elif on_stack[nxt]:
			parent = min(parent,d[nxt])
			
	if parent==d[now]:
		scc=[]
		while True:
			node=stack.pop()
			on_stack[node]=False
			scc.append(node+1)
			if now==node:
				break
		ans.append(scc)
	return parent

for i in range(N):
	if d[i]==-1:
		dfs(i)
if len(ans)==1:
	print("Yes")
else:
	print("No")
