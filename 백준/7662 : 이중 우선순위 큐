import sys
import heapq

for T in range(int(sys.stdin.readline())):
    k = int(sys.stdin.readline())
    visited = [False] * k
    maxH, minH = [], [] #최소힙, 최대힙 따로 
    for i in range(k):
        operation, n = sys.stdin.readline().split()
        n = int(n)

        if operation == 'I':
            heapq.heappush(minH, (n, i))
            heapq.heappush(maxH, (-n, i))
            visited[i] = True
        elif n == 1: #최대값 삭제
        	#최소값힙에서 이미 삭제 했으면 동기화를 위해 삭제해주기
            while maxH and not visited[maxH[0][1]]:
                heapq.heappop(maxH)
    		#아니라면 최대값을 삭제하고 최소값에서도 삭제할 수 있게 visited값 수정
            if maxH: 
                visited[maxH[0][1]] = False
                heapq.heappop(maxH)
        else:
        	#최대값힙에서 이미 삭제 했으면 동기화를 위해 삭제해주기
            while minH and not visited[minH[0][1]]:
                heapq.heappop(minH)
            #아니라면 최소값을 삭제하고 최대값에서도 삭제할 수 있게 visited값 수정    
            if minH:
                visited[minH[0][1]] = False
                heapq.heappop(minH)
	#모든 경우가 끝나고 서로 동기화를 위해 이미 다른 힙에서 삭제한 항목은 삭제하기
    while minH and not visited[minH[0][1]]:
        heapq.heappop(minH)
    while maxH and not visited[maxH[0][1]]:
        heapq.heappop(maxH)
    print(-maxH[0][0], minH[0][0]) if maxH and minH else print("EMPTY")
