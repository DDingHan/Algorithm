import sys
from collections import deque
input = sys.stdin.readline

A=[[(0,0),(0,1),(0,2),(0,3)],[(0,0),(1,0),(2,0),(3,0)]]
B=[[(0,0),(0,1),(1,0),(1,1)]]
C=[[(0,0),(0,1),(0,2),(1,0)],[(0,0),(1,0),(2,0),(2,1)],[(0,0),(0,1),(0,2),(-1,2)],[(0,0),(0,1),(1,1),(2,1)]]
D=[[(0,0),(0,1),(0,2),(1,2)],[(0,0),(1,0),(2,0),(2,-1)],[(0,0),(0,1),(0,2),(-1,0)],[(0,0),(0,1),(1,0),(2,0)]]
E=[[(0,0),(1,0),(1,1),(2,1)],[(0,0),(0,1),(-1,1),(-1,2)]]
F=[[(0,1),(1,1),(1,0),(2,0)],[(0,0),(0,1),(1,1),(1,2)]]
G=[[(0,0),(0,1),(0,2),(1,1)],[(0,0),(1,0),(2,0),(1,-1)],[(0,0),(0,1),(0,2),(-1,1)],[(0,0),(1,0),(2,0),(1,1)]]
blocks=[A,B,C,D,E,F,G]

N,M=map(int,input().split())
board=[list(map(int,input().split())) for _ in range(N)]
num_max=0
for i in range(N):
	for j in range(M):
		for block in blocks: #모든 블럭들에 대해서
			for direction in block: #하나의 블럭의 모든 회전에 대해서
				num=0
				for di,dj in direction:
					ni,nj=i+di,j+dj
					if 0<=ni<N and 0<=nj<M:
						num+=board[ni][nj]
					else: #해당 블럭이 판 밖으로 나간 경우
						break
				else: #블럭이 판 안에 있을 경우 최대값 갱신
					num_max=max(num_max,num)
print(num_max)
