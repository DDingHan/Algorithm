import sys
from collections import deque
input = sys.stdin.readline

def bfs(i,j):
	global P,check
	Q=deque([(i,j)])
	check[i][j]=1
	count=1
	D=[(-1,0),(0,1),(1,0),(0,-1)]
	while Q:
		x,y=Q.popleft()
		for dx,dy in D:
			nx=x+dx
			ny=y+dy
			if 0<=nx<M and 0<=ny<N:
				if P[nx][ny]==0 and check[nx][ny]==0:
					Q.append((nx,ny))
					check[nx][ny]=1
					count+=1
	return count

M,N,K=map(int,input().split())
P=[[0]*N for _ in range(M)]
check=[[0]*N for _ in range(M)]
Answer=[]
for _ in range(K):
	x1,y1,x2,y2=map(int,input().split())
	for i in range(y1,y2):
		for j in range(x1,x2):
			P[i][j]=1
for i in range(M):
	for j in range(N):
		if P[i][j]==0 and check[i][j]==0:
			Answer.append(bfs(i,j))
Answer.sort()
print(len(Answer))
print(" ".join(map(str,Answer)))
