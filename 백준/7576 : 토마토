import sys
from collections import deque
input = sys.stdin.readline
# m : 상자 가로 칸 수, n : 상자 세로 칸 수
m, n= map(int, input().split())
arr = []
queue = deque()
for i in range(n):
	arr.append(list(map(int, input().split())))
	for j in range(m):
		if arr[i][j] == 1:
        	#익어있는 토마토를 모두 Q에 넣고 bfs실행 
			queue.append((i, j))
			
# 4방향 : 위, 아래, 왼쪽, 오른쪽
directions = [(-1, 0), (0, 1), (1, 0), (0, -1)]

while queue:  # bfs 수행
	y,x=queue.popleft()
	for i in range(4):  # 6방향으로 익히기
		dy = y + directions[i][0]
		dx = x + directions[i][1]
		if 0 <= dy < n and 0 <= dx < m and arr[dy][dx] == 0:  # 익힐 수 있는 토마토라면
			arr[dy][dx] = arr[y][x] + 1
			queue.append((dy, dx))

result = 0  # 며칠 걸리는지
for i in range(n):
	for j in range(m):
		if arr[i][j] == 0:  # 토마토가 모두 익지 못한 상황 발견시
			print(-1)
			exit(0)  # 바로 종료
		else:
			result = max(result, arr[i][j])  # 며칠 걸리는지 업데이트

print(result - 1)
